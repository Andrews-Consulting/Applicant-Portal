<!-- add implements="forceCommunity:availableForAllPageTypes" to surface the component in community builder -->
<aura:component implements="forceCommunity:availableForAllPageTypes" controller="DX_SelfRegisterController" access="global">
    <aura:attribute name="accountId" type="String" required="false" description="accountId for creating the user. If not specified, it will create a PersonAccount if possible for B2C scenario. Or otherwise if it's in a community, the community's self-registration accountId will be used."
    />
    <aura:attribute name="regConfirmUrl" type="String" required="true" />
    <aura:attribute name="startUrl" type="String" required="false" description="The url you go to after a successful login" />
    <aura:attribute name="showError" type="Boolean" required="true" description="" default="false" access="private" />
    <aura:attribute name="exit" type="Boolean" required="true" description="" default="false" access="private" />
    <aura:attribute name="errorMessage" type="String" required="false" description="" access="private" />
    <aura:attribute name="firstnameLabel" type="String" required="false" default="First Name" />
    <aura:attribute name="lastnameLabel" type="String" required="false" default="Last Name" />
    <aura:attribute name="emailLabel" type="String" required="false" default="Email" />
    <aura:attribute name="passwordLabel" type="String" required="false" default="Create Password" />
    <aura:attribute name="confirmPasswordLabel" type="String" required="false" default="Confirm Password" />
    <aura:attribute name="leftButtonLabel" type="string" required="true" default="Register as a new User and Create an Application for a new License/Permit" />
    <aura:attribute name="rightButtonLabel" type="string" description="" default="Register as a new User and Connect to an existing License/Application" />
    <aura:attribute name="includePasswordField" type="Boolean" required="false" default="false" description="Whether to include password" />
    <aura:attribute name="extraFieldsFieldSet" type="String" required="false" description="A field set name whose fields are desired for user registration" />
    <aura:attribute name="extraFields" type="list" required="false" description="A field set name whose fields are desired for user registration" />
    <aura:handler name="init" value="{!this}" action="{!c.initialize}" />

    <aura:registerevent name="sitePropagatedStartUrl" type="c:setStartUrl" />
    <aura:handler name="init" value="{!this}" action="{!c.initialize}" />
    <aura:dependency resource="c:setStartUrl" type="EVENT" />
    <aura:dependency resource="siteforce:registerQueryEventMap" type="EVENT" />
    <!-- <aura:handler event="c:setStartUrl" action="{!c.setStartUrl}" /> -->

    <div>
        <aura:renderIf isTrue="{!v.showError}">
            <div id="error">
                <ui:outputRichText value="{!v.errorMessage}" />
            </div>
        </aura:renderIf>
        <div id="sfdc_username_container" class="slds-container--center slds-container--small">
            <span id="sfdc_user" class="login-icon" data-icon="a"></span>
            <ui:inputText value="" aura:id="firstname" label="{!v.firstnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" required="true"/>
        </div>

        <div id="sfdc_nickname_container" class="slds-container--center slds-container--small">
            <span id="sfdc_user" class="login-icon" data-icon="a"></span>
            <ui:inputText value="" aura:id="lastname" label="{!v.lastnameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" required="true" />
        </div>

        <div id="sfdc_email_container" class="slds-container--center slds-container--small">
            <span id="sfdc_user" class="login-icon" data-icon="k"></span>
            <ui:inputText value="" aura:id="email" label="{!v.emailLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" required="true" />
        </div>

        <aura:iteration aura:id="extraFields" items="{!v.extraFields}" var="curField" indexVar="index">
            <div id="sfdc_extrafield_container" class="slds-container--center slds-container--small">
                <span id="sfdc_user" class="login-icon" data-icon="a"></span>
                <ui:inputText value="{!curField.value}" aura:id="{!curField.fieldPath}" label="{!curField.label}" keyup="{!c.onKeyUp}" class="input sfdc_extrafieldinput sfdc" />
            </div>
        </aura:iteration>

        <aura:renderIf isTrue="{!v.includePasswordField}">
            <div id="sfdc_password_container" class="slds-container--center slds-container--small">
                <span id="sfdc_lock" class="login-icon sfdc" data-icon="c"></span>
                <ui:inputSecret value="" aura:id="password" label="{!v.passwordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc" required="true" />
            </div>

            <div id="sfdc_confirm_password_container" class="slds-container--center slds-container--small">
                <span id="sfdc_lock" class="login-icon sfdc" data-icon="c"></span>
                <ui:inputSecret value="" aura:id="confirmPassword" label="{!v.confirmPasswordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc" required="true" />
            </div>
        </aura:renderIf>

        <div class="inner">
            <div class="slds-grid">
                <div class="slds-col slds-size--2-of-5">
                    <div class="inner">
                        <ui:button aura:id="submitButton" press="{!c.handleLeft}" class="stdButton">
                            <span>{!v.leftButtonLabel}</span>
                        </ui:button>
                    </div>
                </div>
                <div class="slds-col slds-size--1-of-5">
                </div>
                <div class="slds-col slds-size--2-of-5">
                    <div class="inner">
                        <ui:button aura:id="submitButton" press="{!c.handleRight}" class="stdButton">
                            <span>{!v.rightButtonLabel}</span>
                        </ui:button>
                        <p style="text-align:center">You must know the Owner's Name and SSN stored on the license or application to complete this process</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="slds-spinner_container slds-hide slds-is-fixed" aura:id="spinner">
    	<lightning:spinner variant="brand" size="large"  alternativeText="Waiting on the login process to complete"/>
    </div>
</aura:component>